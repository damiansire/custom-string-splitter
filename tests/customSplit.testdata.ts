export const testCases = [
  { input: "console.log('Hello, world!')", expectedOutput: ["console.log", "(", "'Hello, world!'", ")"] },
  {
    input: `export interface Task { title: string; description: string; }`,
    expectedOutput: [
      "export",
      "interface",
      "Task",
      "{",
      "title",
      ":",
      "string",
      ";",
      "description",
      ":",
      "string",
      ";",
      "}",
    ],
  },
  {
    input: `enum ProjectState { Cancelled = "Cancelled", Completed = "Completed", InProgress = "In Progress", Pending = "Pending", Blocked = "Blocked", }`,
    expectedOutput: [
      "enum",
      "ProjectState",
      "{",
      "Cancelled",
      "=",
      '"Cancelled"',
      ",",
      "Completed",
      "=",
      '"Completed"',
      ",",
      "InProgress",
      "=",
      '"In Progress"',
      ",",
      "Pending",
      "=",
      '"Pending"',
      ",",
      "Blocked",
      "=",
      '"Blocked"',
      ",",
      "}",
    ],
  },
  {
    input: `const myVar: number = 123;`,
    expectedOutput: ["const", "myVar", ":", "number", "=", "123", ";"],
  },
  {
    input: `function myFunction(param1: string, param2: number) { return param1 + param2; }`,
    expectedOutput: [
      "function",
      "myFunction",
      "(",
      "param1",
      ":",
      "string",
      ",",
      "param2",
      ":",
      "number",
      ")",
      "{",
      "return",
      "param1",
      "+",
      "param2",
      ";",
      "}",
    ],
  },
  {
    input: `const myString = "Hello, world! @#$%^&*()";`,
    expectedOutput: ["const", "myString", "=", '"Hello, world! @#$%^&*()"', ";"],
  },
  {
    input: `const myObject = { key1: "value1", key2: 123 };`,
    expectedOutput: ["const", "myObject", "=", "{", "key1", ":", '"value1"', ",", "key2", ":", "123", "}", ";"],
  },
  {
    input: `const myArray: string[] = ["item1", "item2", "item3"];`,
    expectedOutput: [
      "const",
      "myArray",
      ":",
      "string[]",
      "=",
      "[",
      '"item1"',
      ",",
      '"item2"',
      ",",
      '"item3"',
      "]",
      ";",
    ],
  },
  {
    input: `enum ProjectState { Cancelled = "Cancelled", Completed = "Completed", InProgress = "In Progress", Pending = "Pending", Blocked = "Blocked", }`,
    expectedOutput: [
      "enum",
      "ProjectState",
      "{",
      "Cancelled",
      "=",
      '"Cancelled"',
      ",",
      "Completed",
      "=",
      '"Completed"',
      ",",
      "InProgress",
      "=",
      '"In Progress"',
      ",",
      "Pending",
      "=",
      '"Pending"',
      ",",
      "Blocked",
      "=",
      '"Blocked"',
      ",",
      "}",
    ],
  },
  {
    input: `export interface Task { title: string; description: string; }`,
    expectedOutput: [
      "export",
      "interface",
      "Task",
      "{",
      "title",
      ":",
      "string",
      ";",
      "description",
      ":",
      "string",
      ";",
      "}",
    ],
  },
  {
    input: `interface Task { title: string; description: string; }`,
    expectedOutput: ["interface", "Task", "{", "title", ":", "string", ";", "description", ":", "string", ";", "}"],
  },
  {
    input: `export interface Task { title: string; description: string; state: ProjectState; } enum ProjectState { Cancelled = "Cancelled", Completed = "Completed", InProgress = "In Progress", Pending = "Pending", Blocked = "Blocked", }`,
    expectedOutput: [
      "export",
      "interface",
      "Task",
      "{",
      "title",
      ":",
      "string",
      ";",
      "description",
      ":",
      "string",
      ";",
      "state",
      ":",
      "ProjectState",
      ";",
      "}",
      "enum",
      "ProjectState",
      "{",
      "Cancelled",
      "=",
      '"Cancelled"',
      ",",
      "Completed",
      "=",
      '"Completed"',
      ",",
      "InProgress",
      "=",
      '"In Progress"',
      ",",
      "Pending",
      "=",
      '"Pending"',
      ",",
      "Blocked",
      "=",
      '"Blocked"',
      ",",
      "}",
    ],
  },
  {
    input: `export interface Task { title: string; description: string; state: string; stack: { technology: string }[]; }`,
    expectedOutput: [
      "export",
      "interface",
      "Task",
      "{",
      "title",
      ":",
      "string",
      ";",
      "description",
      ":",
      "string",
      ";",
      "state",
      ":",
      "string",
      ";",
      "stack",
      ":",
      "{",
      "technology",
      ":",
      "string",
      "}",
      "[]",
      ";",
      "}",
    ],
  },
  {
    input: `export interface Project { id: string; title: string; description: string; githubRepositories: string[]; lastModification: Date; creationDate: Date; stack: Technology[]; state: ProjectState; dependencies: Project[]; features: Feature[]; } export interface Feature { title: string; description: string; state: FeatureState; dependencies: Feature[]; tasks: Task[]; } export interface Task { title: string; description: string; state: ProjectState; } interface Technology { name: string; } enum ProjectState { Cancelled = "Cancelled", Completed = "Completed", InProgress = "In Progress", Pending = "Pending", Blocked = "Blocked", } enum FeatureState { Cancelled = "Cancelled", Completed = "Completed", InProgress = "In Progress", Pending = "Pending", Blocked = "Blocked", } export interface Board { id: string; project: Project; }`,
    expectedOutput: [
      "export",
      "interface",
      "Project",
      "{",
      "id",
      ":",
      "string",
      ";",
      "title",
      ":",
      "string",
      ";",
      "description",
      ":",
      "string",
      ";",
      "githubRepositories",
      ":",
      "string[]",
      ";",
      "lastModification",
      ":",
      "Date",
      ";",
      "creationDate",
      ":",
      "Date",
      ";",
      "stack",
      ":",
      "Technology[]",
      ";",
      "state",
      ":",
      "ProjectState",
      ";",
      "dependencies",
      ":",
      "Project[]",
      ";",
      "features",
      ":",
      "Feature[]",
      ";",
      "}",
      "export",
      "interface",
      "Feature",
      "{",
      "title",
      ":",
      "string",
      ";",
      "description",
      ":",
      "string",
      ";",
      "state",
      ":",
      "FeatureState",
      ";",
      "dependencies",
      ":",
      "Feature[]",
      ";",
      "tasks",
      ":",
      "Task[]",
      ";",
      "}",
      "export",
      "interface",
      "Task",
      "{",
      "title",
      ":",
      "string",
      ";",
      "description",
      ":",
      "string",
      ";",
      "state",
      ":",
      "ProjectState",
      ";",
      "}",
      "interface",
      "Technology",
      "{",
      "name",
      ":",
      "string",
      ";",
      "}",
      "enum",
      "ProjectState",
      "{",
      "Cancelled",
      "=",
      '"Cancelled"',
      ",",
      "Completed",
      "=",
      '"Completed"',
      ",",
      "InProgress",
      "=",
      '"In Progress"',
      ",",
      "Pending",
      "=",
      '"Pending"',
      ",",
      "Blocked",
      "=",
      '"Blocked"',
      ",",
      "}",
      "enum",
      "FeatureState",
      "{",
      "Cancelled",
      "=",
      '"Cancelled"',
      ",",
      "Completed",
      "=",
      '"Completed"',
      ",",
      "InProgress",
      "=",
      '"In Progress"',
      ",",
      "Pending",
      "=",
      '"Pending"',
      ",",
      "Blocked",
      "=",
      '"Blocked"',
      ",",
      "}",
      "export",
      "interface",
      "Board",
      "{",
      "id",
      ":",
      "string",
      ";",
      "project",
      ":",
      "Project",
      ";",
      "}",
    ],
  },
];
